<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:vm="clr-namespace:JudgeSharp.ViewModels"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:JudgeSharp.Views"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:Documents="clr-namespace:System.Windows.Documents;assembly=PresentationUI" x:Class="JudgeSharp.Views.EqualityComperPoblemView"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="1000"
             FontFamily="Nirmala UI Semilight" x:Name="uc">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="bool2Vis"/>
        <local:BindingProxy x:Key="Proxy" Data="{Binding ''}"/>
    </UserControl.Resources>
    <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" >
        <StackPanel Background="#FF1A1A1A" >
            <Grid>
                <TextBlock Text="{Binding Name}" FontSize="24" FontFamily="Nirmala UI" Foreground="White" TextAlignment="Center"/>
                <TextBox Text="{Binding Name}" Visibility="{Binding IsEditing, Converter={StaticResource bool2Vis}}" FontSize="24" FontFamily="Nirmala UI" Background="#FF333333" Foreground="White" TextAlignment="Center"/>
                <Button ToolTip="Edit" Command="{Binding ToggelEditCommand}" HorizontalAlignment="Right" Width="32" Height="32" VerticalAlignment="Top" Margin="0,1,10,0">
                    <Image Source="/JudgeSharp;component/IMG/edit-png.png" />
                </Button>
                <Button ToolTip="Lock/Unlock" Click="ToggelUnlockButton_Click" HorizontalAlignment="Right" Width="32" Height="32" VerticalAlignment="Top" Margin="0,1,47,0">
                    <Image Source="/JudgeSharp;component/IMG/lock-png.png" />
                </Button>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <TextBlock Text="Memory Limit: " Foreground="White" FontSize="14"/>
                    <Grid>
                        <TextBlock Text="{Binding MemoryLimit}" FontSize="14" Foreground="White"/>
                        <TextBox MinWidth="30" TextAlignment="Center" Text="{Binding MemoryLimit}" FontSize="14" Visibility="{Binding IsEditing, Converter={StaticResource bool2Vis}}" Background="#FF333333" Foreground="White" />
                    </Grid>
                    <TextBlock Text=" MB" Foreground="White" FontSize="14"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Center" Grid.Column="1" Orientation="Horizontal">
                    <TextBlock MinWidth="30" Text="Time Limit: " Foreground="White" FontSize="14"/>
                    <Grid>
                        <TextBlock Text="{Binding TimeLimit}" Foreground="White" FontSize="14"/>
                        <TextBox MinWidth="30" Text="{Binding TimeLimit}" TextAlignment="Center" FontSize="14" Visibility="{Binding IsEditing, Converter={StaticResource bool2Vis}}" Background="#FF333333" Foreground="White" />
                    </Grid>
                    <TextBlock Text=" ms" Foreground="White" FontSize="14"/>
                </StackPanel>
            </Grid>
            <Grid MaxHeight="200">
                <local:ColorBar x:Name="scb" DotsCount="150" d:IsHidden="False">
                    <local:ColorBar.Style>
                        <Style TargetType="{x:Type local:ColorBar}">
                            <Setter Property="Color" Value="LightGoldenrodYellow"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding State}" Value="FailedToSolve">
                                    <Setter Property="Color" Value="Coral"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding State}" Value="Solved">
                                    <Setter Property="Color" Value="#FF00FF97"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </local:ColorBar.Style>
                </local:ColorBar>
                <TextBlock x:Name="stx" Text="{Binding StateText}" TextAlignment="Center" FontSize="16" FontWeight="SemiBold" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" >
                    <TextBlock.Effect>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="3"/>
                    </TextBlock.Effect>
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="#FFECECEC"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding State}" Value="FailedToSolve">
                                    <Setter Property="Foreground" Value="#FFFF5858"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding State}" Value="Solved">
                                    <Setter Property="Foreground" Value="#FF22E045"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
            <Grid>
                <Grid.Style>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding State}" Value="Solved">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsNew}" Value="true">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="Your Password: " Foreground="White" FontSize="14"/>
                    <Grid>
                        <TextBlock Text="{Binding Password}" Foreground="White"/>
                        <TextBox MinWidth="100" Text="{Binding Password}" Visibility="{Binding IsEditing, Converter={StaticResource bool2Vis}}" FontSize="14" Background="#FF333333" Foreground="White" TextAlignment="Center"/>
                    </Grid>
                </StackPanel>
            </Grid>
            <DocumentViewer Height="640" Document="{Binding Document}" Background="#FF3E3E42">
                <DocumentViewer.Resources>
                    <Style BasedOn="{x:Null}" TargetType="{x:Type DocumentViewer}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="ContextMenu" Value="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerContextMenu, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DocumentViewer}">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Focusable="False">
                                        <Grid Background="{TemplateBinding Background}" KeyboardNavigation.TabNavigation="Local">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <ContentControl Grid.Column="0" Focusable="{TemplateBinding Focusable}" Grid.Row="0" Style="{DynamicResource ContentControlStyle1}" TabIndex="0">
                                                <ContentControl.Resources>
                                                    <Style x:Key="ContentControlStyle1" TargetType="{x:Type ContentControl}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                                                    <ToolBar Focusable="{TemplateBinding Focusable}" ToolBarTray.IsLocked="True" Language="en-us" KeyboardNavigation.TabNavigation="Continue" Uid="ToolBar_2" Background="#FF2E3038">
                                                                        <Button x:Name="PrintButton" Background="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerPrintButton, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" CommandTarget="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}}" Command="ApplicationCommands.Print" IsTabStop="True" Margin="2" Padding="2" Style="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerButtonStyle, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" ToolTipService.ShowOnDisabled="True" TabIndex="0" ToolTip="Print (Ctrl+P)" Uid="Button_14" VerticalAlignment="Center" Width="24"/>
                                                                        <Button x:Name="CopyButton" Background="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerCopyButton, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" CommandTarget="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}}" Command="ApplicationCommands.Copy" IsTabStop="True" Margin="2" Padding="2" Style="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerButtonStyle, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" ToolTipService.ShowOnDisabled="True" TabIndex="1" ToolTip="Copy (Ctrl+C)" Uid="Button_15" VerticalAlignment="Center" Width="24"/>
                                                                        <Separator Uid="Separator_110"/>
                                                                        <Button x:Name="ZoomInButton" Background="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerZoomInButton, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" CommandTarget="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}}" Command="NavigationCommands.IncreaseZoom" IsTabStop="True" Margin="2" Padding="2" Style="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerButtonStyle, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" ToolTipService.ShowOnDisabled="True" TabIndex="3" ToolTip="Increase the size of the content (Ctrl +)" Uid="Button_16" VerticalAlignment="Center" Width="24"/>
                                                                        <Button x:Name="ZoomOutButton" Background="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerZoomOutButton, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" CommandTarget="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}}" Command="NavigationCommands.DecreaseZoom" IsTabStop="True" Margin="2" Padding="2" Style="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerButtonStyle, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" ToolTipService.ShowOnDisabled="True" TabIndex="4" ToolTip="Decrease the size of the content (Ctrl -)" Uid="Button_17" VerticalAlignment="Center" Width="24"/>
                                                                        <Separator Uid="Separator_111"/>
                                                                        <Button x:Name="ActualSizeButton" Background="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerActualSizeButton, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" CommandTarget="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="100.0" Command="NavigationCommands.Zoom" IsTabStop="True" Margin="2" Padding="2" Style="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerButtonStyle, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" ToolTipService.ShowOnDisabled="True" TabIndex="5" ToolTip="100% (Ctrl+1)" Uid="Button_18" VerticalAlignment="Center" Width="24"/>
                                                                        <Button x:Name="PageWidthButton" Background="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerPageWidthButton, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" CommandTarget="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}}" Command="DocumentViewer.FitToWidthCommand" IsTabStop="True" Margin="2" Padding="2" Style="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerButtonStyle, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" ToolTipService.ShowOnDisabled="True" TabIndex="6" ToolTip="Page Width (Ctrl+2)" Uid="Button_19" VerticalAlignment="Center" Width="24"/>
                                                                        <Button x:Name="WholePageButton" Background="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerWholePageButton, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" CommandTarget="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="1" Command="DocumentViewer.FitToMaxPagesAcrossCommand" IsTabStop="True" Margin="2" Padding="2" Style="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerButtonStyle, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" ToolTipService.ShowOnDisabled="True" TabIndex="7" ToolTip="Whole Page (Ctrl+3)" Uid="Button_20" VerticalAlignment="Center" Width="24"/>
                                                                        <Button x:Name="TwoPagesButton" Background="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerTwoPagesButton, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" CommandTarget="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="2" Command="DocumentViewer.FitToMaxPagesAcrossCommand" IsTabStop="True" Margin="2" Padding="2" Style="{DynamicResource {ComponentResourceKey ResourceId=PUIDocumentViewerButtonStyle, TypeInTargetAssembly={x:Type Documents:PresentationUIStyleResources}}}" ToolTipService.ShowOnDisabled="True" TabIndex="8" ToolTip="Two Pages (Ctrl+4)" Uid="Button_21" VerticalAlignment="Center" Width="24"/>
                                                                    </ToolBar>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ContentControl.Resources>
                                            </ContentControl>
                                            <ScrollViewer x:Name="PART_ContentHost" CanContentScroll="true" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalScrollBarVisibility="Auto" IsTabStop="true" Grid.Row="1" TabIndex="1"/>
                                            <DockPanel Grid.Row="1">
                                                <FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                                                <Rectangle Height="10" Visibility="Visible" VerticalAlignment="top">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStopCollection>
                                                                    <GradientStop Color="#66000000" Offset="0"/>
                                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                                </GradientStopCollection>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                            </DockPanel>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DocumentViewer.Resources>
            </DocumentViewer>
            <Button Height="22" Visibility="{Binding IsEditing, Converter={StaticResource bool2Vis}}" Content="Browse Document" Command="{Binding BrowseDocumentCommand}"/>
            <DataGrid x:Name="testCasesDataGrid" Height="600" SelectionUnit="FullRow" ItemsSource="{Binding TestCases}" SelectedItem="{Binding SelectedTestCase}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="True" Foreground="White" Background="#FF1B1B1C" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" RowStyle="{DynamicResource DataGridRowStyle1}">

                <DataGrid.Resources>
                    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Width" Value="8"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Cursor" Value="SizeWE"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                    <Grid>
                                        <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Background="#FF333337">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="3"/>
                                        </Themes:DataGridHeaderBorder>
                                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="#FF2B2B2C"/>
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                        <Setter Property="ValidationErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridRow}">
                                    <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <SelectiveScrollingGrid>
                                            <SelectiveScrollingGrid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </SelectiveScrollingGrid.ColumnDefinitions>
                                            <SelectiveScrollingGrid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </SelectiveScrollingGrid.RowDefinitions>
                                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                        </SelectiveScrollingGrid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsNewItem" Value="True">
                                <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Input" Width="400">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Height="48" Text="{Binding Input}" TextTrimming="CharacterEllipsis" TextWrapping="WrapWithOverflow" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Output" Width="400">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Height="48" Text="{Binding Output}" TextTrimming="CharacterEllipsis" TextWrapping="WrapWithOverflow"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Visibility="{Binding Data.IsEditing, Converter={StaticResource bool2Vis}, Source={StaticResource Proxy}}">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Height="48" HorizontalContentAlignment="Center" HorizontalAlignment="Stretch" Content="Edit Test Case"  Click="EditTestCaseButton_Click" Tag="{Binding}" Style="{StaticResource LinkButton}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Visibility" Value="Collapsed"/>


                        <Style.Triggers>
                            <DataTrigger Binding="{Binding State}" Value="Solved">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsNew}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
            </DataGrid>
            <Grid Visibility="{Binding IsEditing, Converter={StaticResource bool2Vis}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Content="Add TestCase" Command="{Binding AddTestCaseDocumentCommand}" Grid.Column="0" Margin="3"/>
                <Button Content="Delete TestCase" Command="{Binding DeleteTestCaseDocumentCommand}" Grid.Column="1" Margin="3"/>
                <Button Content="Load TestCase Input" Command="{Binding LoadInpputTestFileCommand}" Grid.Column="2" Margin="3"/>
                <Button Content="Load TestCase Output" Command="{Binding LoadOutputTestFileCommand}" Grid.Column="3" Margin="3"/>
            </Grid>
        </StackPanel>
    </ScrollViewer>
</UserControl>
